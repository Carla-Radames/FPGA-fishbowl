

`timescale 1 ps/ 1 ps
module IR_recieve_vlg_tst();
reg clk;
reg ir_in;
reg rst_n;                                              
wire [7:0]  data;

IR_recieve i1 (  
	.clk(clk),
	.data(data),
	.ir_in(ir_in),
	.rst_n(rst_n)
);
initial                                                
begin                                                  
	clk<=0;
	ir_in<=1;//默认应当为高电平
	rst_n<=0;
	#100 rst_n<=1;
	//模拟50MHz
	#100 
	ir_in<=0;	#900000
	ir_in<=1;	#450000
	//地址码,8'b00000000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#56000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#56000
	ir_in<=0;	#56000  
	ir_in<=1;	#56000
	//地址反码,8'b11111111
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	//数据码,8'b01010101
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	//数据反码，8'b10101010
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	ir_in<=0;	#56000
	ir_in<=1;	#168000
	ir_in<=0;	#56000 
	ir_in<=1;	#56000
	//结束码,由于每一位信号都是一段低-一段高电平，结束信号一定能被检测到
	ir_in<=0;	#56000
	ir_in<=1;
	
end   
                                                 
always                                                                  
begin                                                  
	//#0.5 clk<=~clk; 最小只能是1！！！！
	#1 clk<=~clk;
end                                                    
endmodule
